'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

/**
 * Load openapi specification to json object from api path or api directory.
 * @param {string} api
 * @returns {object}
 */
var load = function () {
  var _ref = _asyncToGenerator(function* (api) {
    var stat = (0, _fs.statSync)(api);
    if (stat.isFile()) {
      return parse(api);
    } else if (stat.isDirectory()) {
      return parse((0, _specBundle.bundle)(api));
    }

    throw new Error('Not support api!');
  });

  return function load(_x) {
    return _ref.apply(this, arguments);
  };
}();

var _fs = require('fs');

var _swaggerParser = require('swagger-parser');

var _swaggerParser2 = _interopRequireDefault(_swaggerParser);

var _specBundle = require('./util/spec-bundle');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

/**
 * Load and parse specification from apiDir. support json or yaml.
 * @param {string} apiDir
 * @returns {Promise}
 */
function parse(apiDir) {
  return _swaggerParser2.default.validate(apiDir, { validate: { schema: true, spec: true } }).then(function (api) {
    return api;
  });
}exports.default = load;